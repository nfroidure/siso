{
  "name": "siso",
  "version": "3.0.1",
  "description": "siso is a routing utility allowing to map a path to a value",
  "main": "dist/index.js",
  "engines": {
    "node": ">=8.12.0"
  },
  "metapak": {
    "data": {
      "files": "src/*.js",
      "testsFiles": "src/*.test.js",
      "ignore": [
        "dist"
      ],
      "bundleFiles": [
        "dist/**/*.js"
      ]
    },
    "configs": [
      "main",
      "jsdocs",
      "jsarch",
      "readme",
      "travis",
      "eslint",
      "codeclimate",
      "jest",
      "babel"
    ]
  },
  "files": [
    "dist/**/*.js",
    "LICENSE",
    "README.md",
    "CHANGELOG.md"
  ],
  "scripts": {
    "architecture": "jsarch src/*.js > ARCHITECTURE.md && git add ARCHITECTURE.md",
    "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s && git add CHANGELOG.md",
    "cli": "env NODE_ENV=${NODE_ENV:-cli}",
    "compile": "babel src --out-dir=dist",
    "cover": "npm run jest -- --coverage",
    "coveralls": "npm run cover && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
    "cz": "env NODE_ENV=${NODE_ENV:-cli} git cz",
    "doc": "echo \"# API\" > API.md; jsdoc2md src/*.js >> API.md && git add API.md",
    "jest": "NODE_ENV=test jest",
    "lint": "eslint src/*.js",
    "metapak": "metapak",
    "mocha": "mocha --compilers js:babel-register src/*.mocha.js",
    "precz": "npm t && npm run lint && npm run doc && npm run architecture && npm run metapak -- -s",
    "prepublish": "npm run compile",
    "prettier": "prettier --write src/*.js",
    "preversion": "npm t && npm run lint && npm run compile && npm run doc && npm run architecture && npm run metapak -- -s",
    "test": "npm run jest",
    "version": "npm run changelog"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nfroidure/siso.git"
  },
  "keywords": [
    "path",
    "router",
    "value"
  ],
  "author": {
    "name": "Nicolas Froidure",
    "email": "nicolas.froidure@insertafter.com",
    "url": "http://insertafter.com/en/index.html"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nfroidure/siso/issues"
  },
  "homepage": "https://github.com/nfroidure/siso#readme",
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.2.2",
    "@babel/plugin-proposal-object-rest-spread": "^7.2.0",
    "@babel/preset-env": "^7.2.3",
    "@babel/register": "^7.0.0",
    "babel-core": "^7.0.0-0",
    "babel-eslint": "^10.0.1",
    "commitizen": "^3.0.5",
    "conventional-changelog-cli": "^2.0.11",
    "coveralls": "^3.0.2",
    "cz-conventional-changelog": "^2.1.0",
    "eslint": "^5.12.0",
    "eslint-plugin-prettier": "^3.0.1",
    "jest": "^23.6.0",
    "jsarch": "^2.0.0",
    "jsdoc-to-markdown": "^4.0.1",
    "metapak": "^2.0.0",
    "metapak-nfroidure": "9.2.0",
    "prettier": "^1.15.3",
    "sinon": "^7.2.2"
  },
  "dependencies": {
    "debug": "^4.1.0",
    "es6-symbol": "^3.1.1",
    "regexp-tpl": "^2.0.1",
    "yerror": "^3.0.0"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "greenkeeper": {
    "ignore": [
      "commitizen",
      "cz-conventional-changelog",
      "conventional-changelog-cli",
      "jsdoc-to-markdown",
      "jsarch",
      "eslint",
      "eslint-config-prettier",
      "prettier",
      "jest",
      "coveralls"
    ]
  },
  "jest": {
    "coverageReporters": [
      "lcov"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/"
    ]
  },
  "babel": {
    "presets": [
      [
        "@babel/env",
        {
          "targets": {
            "node": "8.12.0"
          }
        }
      ]
    ],
    "plugins": [
      "@babel/plugin-proposal-object-rest-spread"
    ]
  },
  "contributors": [],
  "eslintConfig": {
    "extends": "eslint:recommended",
    "parserOptions": {
      "ecmaVersion": 2018,
      "sourceType": "module",
      "modules": true
    },
    "env": {
      "es6": true,
      "node": true,
      "jest": true,
      "mocha": true
    },
    "plugins": [
      "prettier"
    ],
    "rules": {
      "prettier/prettier": "error"
    }
  },
  "prettier": {
    "semi": true,
    "printWidth": 80,
    "singleQuote": true,
    "trailingComma": "all",
    "proseWrap": "always"
  }
}
